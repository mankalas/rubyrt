#!/usr/bin/env ruby

require 'bundler/setup'

require 'ruby-prof'
require 'benchmark'
require 'optparse'
require 'matrix'
require 'byebug'

require 'image_exporter'
require 'objects'
require 'color'
require 'light'
require 'world'

EPS = 1e-9

options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: console.rb [options]'

  opts.on('-h', '--height 1', Integer, 'Height of the rendered image') do |h|
    options[:height] = h
  end

  opts.on('-w', '--width 1', Integer, 'Widthof the rendered image') do |w|
    options[:width] = w
  end
end.parse!

w = World.new(options[:width], options[:height])
dif_pow = 20
spe_pow = 32
[
  PointLight.new(Vector[-10, 10, 0.1], Color::GREEN, dif_pow, Color::GREEN, spe_pow),
  PointLight.new(Vector[0, 10, 0.1], Color::RED, dif_pow, Color::RED, spe_pow),
  PointLight.new(Vector[10, 10, 0.1], Color::BLUE, dif_pow, Color::BLUE, spe_pow),
  PointLight.new(Vector[-5, 0, 0.1], Color::WHITE, dif_pow, Color::WHITE, spe_pow),
  Sphere.new(Vector[0, 0, 10], 4, Color::WHITE),
  Sphere.new(Vector[-2, 1, 4], 1, Color::BLUE),
  Sphere.new(Vector[2, -1, 4], 1.5, Color::RED),
  Plane.new(Vector[0, -10, 0], Vector[0, -1, 0], Color::WHITE),
].each { |obj| w.add(obj) }

puts "Rendering world"
# profile the code
result = RubyProf.profile do
  w.render
end
# print a graph profile to text
printer = RubyProf::FlatPrinter.new(result)
printer.print(STDOUT, {})

puts "Saving image"
puts Benchmark.measure { w.image.write_png('test') }
